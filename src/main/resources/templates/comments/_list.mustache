<div id="comments-list">
	{{#commentsDtos}}
	<div class="card m-2" id="comments-{{id}}">
  	<div class="card-header">
    	{{nickname}}
    	&nbsp;&nbsp;&nbsp;
			<!-- Button trigger modal 댓글 수정 버튼 -->
    	<button type="button" class="btn btn-sm btn-outline-primary"
				data-bs-toggle="modal" data-bs-target="#comment-edit-modal"
				data-bs-id="{{id}}" data-bs-nickname="{{nickname}}" data-bs-body="{{body}}"
				data-bs-article-id="{{articleId}}">
				수정
			</button>
			<!-- 댓글 삭제 버튼 -->
    	<button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn"
				data-id="{{id}}">
				삭제
			</button>
    	({{id}}, {{articleId}})
  	</div>
  	<div class="card-body">
    	{{body}}
  	</div>
	</div>
  {{/commentsDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
				<h5 class="modal-title" id="staticBackdropLabel">댓글 수정</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
			<!-- 수정 화면 -->
      <div class="modal-body">
        <!-- 댓글 수정 폼 -->
				<form>
					<!-- 댓글 id, article_id 둘 다 hidden으로 전송 -->
					<input type="hidden" id="edit-comment-id">
					<input type="hidden" id="edit-comment-article-id">

					<!-- 닉네임 -->
					<div class="mb-3">
						<label class="form-label">닉네임</label>
						<input type="text" class="form-control" id="edit-comment-nickname">
					</div>
					<!-- 댓글 본문 -->
					<div class="mb-3">
						<label class="form-label">댓글 본문</label>
						<textarea class="form-control" rows="3" id="edit-comment-body"></textarea>
					</div>
					<!-- 전송 버튼 -->
					<!--<button class="btn btn-primary" id="comment-update-btn">수정 완료</button>-->
				</form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="comment-update-btn">Save changes</button>
      </div>
    </div>
  </div>
</div>

<!-- 모달 이벤트 처리(다이얼로그가 화면에 나타날 때 해야할 일) -->
<!-- 수정할 자료를 입력받아서 modal div tag에 불러오기 -->
<script>
	//모달 창 찾기
	const commentEditModal = document.querySelector('#comment-edit-modal')
	
	//이벤트 연결 : show.bs.modal - modal 화면이 그려지기 전
	commentEditModal.addEventListener('show.bs.modal', (e) => {
		//console.dir(commentEditModal)
		//alert('show.bs.modal')

		//1. 트리거 버튼 선택
		const triggerBtn = e.relatedTarget
		//console.dir(triggerBtn)

		//2. 데이터 가져오기
		let id = triggerBtn.getAttribute("data-bs-id")
		let nickname = triggerBtn.getAttribute("data-bs-nickname")
		let body = triggerBtn.getAttribute("data-bs-body")
		let articleId = triggerBtn.getAttribute("data-bs-article-id")
		let cmt = `id: ${id}, nickname: ${nickname}, body: ${body}, articleId: ${articleId}`
		//alert(cmt)

		//3. 수정 폼에 데이터 집어넣기
		document.querySelector('#edit-comment-nickname').value = nickname
		document.querySelector('#edit-comment-body').value = body
		document.querySelector('#edit-comment-id').value = id
		document.querySelector('#edit-comment-article-id').value = articleId
	})

	//이벤트 연결 : shown.bs.modal - modal 화면이 그려지기 전
	commentEditModal.addEventListener('shown.bs.modal', (e) => {
		//console.dir(commentEditModal)
		//alert('shown.bs.modal') 
	})
</script>

<!-- 댓글 수정 기능 : Save Change가 클릭되면 -->
<script>
	const commentUpdateBtnEl = document.getElementById('comment-update-btn')

	commentUpdateBtnEl.addEventListener('click', (e) => {
		//{{id}} : pathVariable - mustache 파일에서도 사용 가능
		let id = document.querySelector('#edit-comment-id').value
		let url = '/api/comments/' + id
		let url2 = 'http://localhost:9090/api/comments/{{id}}'
		//console.log(url2)
		const comment = {
			//댓글의 닉네임
			nickname : document.querySelector('#edit-comment-nickname').value,
			//댓글의 본문
			body : document.querySelector('#edit-comment-body').value,
			//댓글의 부모 게시글 아이디
			articleId : document.querySelector('#edit-comment-article-id').value, 
			//댓글의 아이디
			id : document.querySelector('#edit-comment-id').value
		}
		console.log(comment)
		const params = {
			method : 'PATCH',
			headers : {
				"Content-Type" : "application/json"
			},
			body : JSON.stringify(comment)
		}

		fetch(url2, params)
		.then(response => {
			//let cid = response.id
			const msg = (response.ok) ? "댓글이 수정되었습니다." : "댓글이 수정되지 않았습니다."
			alert(msg)
			//현재 페이지 새로 고침
			window.location.reload()
		})
	})
</script>

<!-- 댓글 삭제 기능 -->
<script>
	const commentDeleteBtnEls = document.querySelectorAll('.comment-delete-btn')

	commentDeleteBtnEls.forEach((commentDeleteBtnEl) => {
		commentDeleteBtnEl.addEventListener('click', (e) => {
			let id = commentDeleteBtnEl.dataset.id
			console.log(id)
			let url = 'http://localhost:9090/api/comments/' + id
			console.log(url)
			const comment = {
				id : id
			}
			const params = {
				method : 'DELETE',
				headers : {
					"Content-Type" : "application/json"
				},
				body : JSON.stringify(comment)
			}

			fetch(url, params)
			.then(response => {
				//let cid = response.id
				const msg = (response.ok) ? "댓글이 삭제되었습니다." : "댓글이 삭제되지 않았습니다."
				alert(msg)
				//현재 페이지 새로 고침
				window.location.reload()
			})
		})
	})
</script>

<!--  -->
<!--  -->